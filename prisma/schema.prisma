generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(cuid())
  email        String      @unique
  passwordHash String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  blogPosts    BlogPost[]
  blogComments BlogComment[]
  // Author profile fields
  name         String?
  bio          String?        @db.Text
  avatar       String?
  website      String?
  twitter      String?
  facebook     String?
  instagram    String?
// ...existing code...
>>>>>>> theirs
}

model BlogPost {
  id              String         @id @default(cuid())
  slug            String         @unique
  title           String
  excerpt         String?
  content         String
  coverImage      String?
  coverImageAlt   String?
  published       Boolean        @default(false)
  publishedAt     DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  authorId        String
<<<<<<< ours
=======
  author          User              @relation(fields: [authorId], references: [id], onDelete: Cascade)
  categories      BlogCategory[]
  tags            BlogTag[]
  metaTitle       String?
  metaDescription String?
  metaKeywords    String?
  readingTime     Int?
  viewCount       Int            @default(0)
  author          User           @relation(fields: [authorId], references: [id], onDelete: Cascade)
  categories      BlogCategory[] @relation("BlogCategoryToBlogPost")
  tags            BlogTag[]      @relation("BlogPostToBlogTag")

  @@index([slug])
  @@index([published, publishedAt])
  @@index([authorId])
}

model BlogCategory {
  id          String     @id @default(cuid())
  slug        String     @unique
  name        String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  posts       BlogPost[] @relation("BlogCategoryToBlogPost")

  @@index([slug])
}

model BlogTag {
  id        String     @id @default(cuid())
  slug      String     @unique
  name      String
  createdAt DateTime   @default(now())
  posts     BlogPost[] @relation("BlogPostToBlogTag")

  @@index([slug])
}

